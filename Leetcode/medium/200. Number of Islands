class Solution {
public:
    int numIslands(vector<vector<char>>& grid) {
        int ans=0;
        int dx[]={0,0,1,-1};
        int dy[]={1,-1,0,0};
        int rc=grid.size();
        int cc=grid[0].size();
        for(int i=0;i<rc;i++){
            for(int j=0;j<cc;j++){
                if(grid[i][j]=='1'){
                    ans++;
                    queue<pair<int,int>>q;
                    grid[i][j]=0;
                    q.push({i,j});
                    while(!q.empty()){
                        auto top=q.front();
                        q.pop();
                        for(int k=0;k<4;k++){
                            int nx=dx[k]+top.first;
                            int ny=dy[k]+top.second;
                            if(nx<rc&&nx>-1&&ny<cc&&ny>-1&&grid[nx][ny]=='1'){
                                grid[nx][ny]=0;
                                q.push({nx,ny});
                            }
                        }
                    }

                }
            }
        }
        return ans;
    }
};
