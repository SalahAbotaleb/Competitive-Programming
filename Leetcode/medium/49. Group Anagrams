class Solution {
public:
    const int mod=1e9+7;
    const int base=27;
    int pow[27];
    void pre(){
        pow[0]=1;
        for(int i=1;i<base;i++){
            pow[i]=((pow[i-1]%mod)*(long long)base)%mod;
        }
    }
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        //unordered_map<int,vector<int>>mp;
        //pre();
        unordered_map<string,vector<string>>ump;
        for(int i=0;i<strs.size();i++){
            string tmp=strs[i];
            sort(tmp.begin(),tmp.end());
            ump[tmp].push_back(strs[i]);
        }
        vector<vector<string>>ans(ump.size());
        int idx=0;
        for(auto it:ump){
            for(auto ij:it.second){
                ans[idx].push_back(ij);
            }
            idx++;
        }
        return ans;
    }
};
