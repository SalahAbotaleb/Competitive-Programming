/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* res=nullptr;
        ListNode* head=nullptr;
        while(list1 || list2){
            if(list1&&list2){
                if(list1->val<=list2->val){
                    if(res==nullptr){head=res=list1;}
                    else {res->next=list1;
                    res=res->next;}
                    list1=list1->next;
                }else{
                    if(res==nullptr){head=res=list2;}
                    else {res->next=list2;
                    res=res->next;}
                    list2=list2->next;
                }
            }else if(list1){
                 if(res==nullptr){head=res=list1;}
                    else {res->next=list1;
                    res=res->next;}
                    list1=list1->next;
            }else{
                    if(res==nullptr){head=res=list2;}
                    else {res->next=list2;
                    res=res->next;}
                    list2=list2->next;
                }
        }
        return head;
    }
};
